name: Build MetricWhiz

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: write # Required for creating releases and uploading assets

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable] # Use the latest stable version of Rust

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }} # Use the stable toolchain
          override: true

      - name: Build
        run: cargo build --release

      - name: Run Tests
        run: cargo test

      - name: Package for Windows
        if: matrix.os == 'windows-latest'
        run: |
          mkdir -p target/releases
          Copy-Item target/release/metricwhiz.exe target/releases/metricwhiz-windows.exe

      - name: Package for Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p target/releases
          cp target/release/metricwhiz target/releases/metricwhiz-linux

      - name: Package for macOS
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p target/releases
          cp target/release/metricwhiz target/releases/metricwhiz-macos

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: metricwhiz
          path: target/releases/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: metricwhiz
          path: ./artifacts

      - name: Upload Release Asset for Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/metricwhiz-windows.exe
          asset_name: metricwhiz-windows.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset for Linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/metricwhiz-linux
          asset_name: metricwhiz-linux
          asset_content_type: application/octet-stream

      - name: Upload Release Asset for macOS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/metricwhiz-macos
          asset_name: metricwhiz-macos
          asset_content_type: application/octet-stream